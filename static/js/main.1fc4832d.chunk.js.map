{"version":3,"sources":["config.js","components/Loading/index.jsx","Utilities/Cookie/index.jsx","compositions/Analytics/withAnalytics.js","Utilities/Fields/index.js","components/MainForm/index.jsx","components/AdditionalForm/index.jsx","components/Header/index.jsx","views/EditProfile/index.jsx","components/Error/index.jsx","Utilities/Api/api.js","views/ViewProfile/index.jsx","views/About/index.jsx","views/LeaderBoard/index.jsx","App.js","serviceWorker.js","index.js"],"names":["serverUrl","InfoMessage","_ref","title","message","react_default","a","createElement","className","Loading","Loading_InfoMessage","deleteCookie","key","domain","document","cookie","trackPageview","compose","lifecycle","componentDidMount","process","REACT_APP_ENV","ReactGA","pageview","window","location","pathname","requiredFields","additionalFields","fieldToDescription","driverName","email","password","phone","rideshareServices","cities","description","languages","fieldToPrompt","fieldToFeedback","isValidDriverObject","driver","every","field","fieldValueToString","content","Object","values","reverse","join","fieldInputToValue","input","string","validator","trim","split","map","str","matches","undefined","filter","length","first","last","slice","isEmail","normalizeEmail","match","replace","services","isAscii","MainForm","props","fields","toConsumableArray","askForPassword","splice","Fragment","isSignUp","Form","i","Group","as","Row","Label","column","sm","Col","Control","type","placeholder","readOnly","plaintext","onChange","event","handleInput","formProps","AdditionalForm","driverUpdate","redirectToOrigin","href","Header","Navbar","collapseOnSelect","expand","bg","variant","src","alt","onClick","Text","Toggle","aria-controls","Collapse","id","Nav","Link","withAnalytics","EditProfile","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","initDriverUpdate","forEach","state","console","log","setState","isLoading","editingButtons","Button","handleSubmit","stopEditing","changes","notEditingButton","startEditing","handleDone","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","handleFormSubmission","picture","ref","sent","stop","setModal","target","value","objectSpread","onDrop","picLength","url","URL","createObjectURL","err","setNotification","isEditing","reset","arguments","reload","profile","Date","getTime","render","additionalFormProps","mainFormProps","ImageUploaderProps","withIcon","singleImage","buttonText","imgExtension","label","maxFileSize","uploadStyles","innerWidth","width","components_Loading","components_Header","compiled_default","assign","style","components_MainForm","components_AdditionalForm","logoutDriver","referrer","Component","errorRedirect","ErrorTemplate","error","entries","Error_ErrorTemplate","requestDefaults","query","credentials","method","headers","Accept","Content-Type","getDriver","receiveDriver","handleError","queryForDriver","endpoint","request","Request","fetch","then","createFormData","data","FormData","append","concat","Array","isArray","set","JSON","stringify","createDriver","handleCreateResponse","newDriverInfo","body","_x","_x2","_x3","_x4","apply","updateDriver","handleUpdateResponse","updatedDriverInfo","Modal","setAppElement","Profile","open","msg","prompt","modal","isOpen","text","buttonPrompt","createModal","lib_default","onRequestClose","shouldFocusAfterRender","overlayClassName","notification","isError","createNotification","modalClass","titleClass","textClass","String","shouldCloseOnOverlayClick","notifyError","_ref2","_callee2","response","_context2","json","localStorage","setItem","status","handleImageUploadError","_ref3","_callee3","invalidFields","invalidRequiredFields","_context3","alertInvalidInput","abrupt","sanitizedInput","validateEdit","isValid","push","f","includes","refreshDriverInfo","_ref4","_callee4","_context4","now","_x5","_x6","_x7","reason","_ref5","_callee5","res","_context5","_x8","_ref6","_callee6","_context6","_x9","editProps","askForEmail","components_Error","views_EditProfile","AboutPage","ready","LeaderBoardPage","e","handleChange","createOptions","daysLeft","createRow","drivers","index","count","apiUrl","param","currentDriver","getItem","getAllDrivers","_this2","dateParams","_len","_key","Authorization","totalCount","keys","date","sort","sortByProperty","x","y","indexOf","substring","dateValue","prevMonday","setDate","getDate","getDay","d","month","getMonth","day","year","getFullYear","findLastMonday","formattedDate","toISOString","options","formatDate","isTbaleHeader","backgroundColor","fontWeight","emailMasking","App","params","queryString","parse","search","react_router","exact","path","component","ErrorPage","About","LeaderBoard","to","Boolean","hostname","production","initialize","debug","siteSpeedSampleRate","ReactDOM","react_router_dom","build_default","org","src_App_0","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.1fc4832d.chunk.js","sourcesContent":["var serverUrl;\r\nconsole.log(\"env var:\", process.env.REACT_APP_ENV)\r\nif  (process.env.REACT_APP_ENV === 'production') {\r\n    serverUrl = 'https://api.portlmedia.com';\r\n} else if (process.env.REACT_APP_ENV === 'staging'){\r\n    serverUrl = 'https://api-staging.portlmedia.com';\r\n} else {\r\n    serverUrl = 'https://api-staging.portlmedia.com';\r\n    // serverUrl = 'http://localhost:8080';\r\n}\r\n\r\nexport {serverUrl}","import React from 'react';\r\n\r\nconst InfoMessage = ({ title, message }) =>\r\n    <div className=\"infoBoxWrapper\">\r\n        <div className=\"infoWrapper\">\r\n            <h1 className=\"titleText\" >{title}</h1>\r\n            <h2 className=\"infoSubText\" >{message}</h2>\r\n        </div>\r\n    </div>\r\n\r\n\r\nconst Loading = () => (\r\n    <InfoMessage title=\"LOADING EXPERIENCE\" message=\"PLEASE WAIT\" />\r\n)\r\nexport default Loading;","export const setCookie = (key, data, time) => {\r\n  let date = new Date();\r\n  date.setTime(date.getTime() + (time * 60 * 60 * 1000));\r\n  let expires = \"expires=\" + date.toUTCString();\r\n  document.cookie = key + \"=\" + JSON.stringify(data) + \";\" + expires + \";path=/\";\r\n}\r\n\r\nexport const getCookie = (key) => {\r\n  let keyStr = key + \"=\";\r\n  let decodedCookie = decodeURIComponent(document.cookie);\r\n  let cookieArray = decodedCookie.split(';');\r\n  for (let i = 0; i < cookieArray.length; i++) {\r\n      let chars = cookieArray[i];\r\n      while (chars.charAt(0) === ' ') {\r\n          chars = chars.substring(1);\r\n      }\r\n      if (chars.indexOf(keyStr) === 0) {\r\n          return chars.substring(keyStr.length, chars.length);\r\n      }\r\n  }\r\n  return \"\";\r\n}\r\n\r\nexport const deleteCookie = (key, domain) => {\r\n  // overwrites and expires existing cookie\r\n  document.cookie = key + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; domain=\" + domain;\r\n}","import { compose, lifecycle } from 'recompose';\r\nimport ReactGA from 'react-ga';\r\n\r\nconst trackPageview = compose(lifecycle({\r\n    componentDidMount() {\r\n        if (process.env.REACT_APP_ENV === 'production') {\r\n            ReactGA.pageview(window.location.pathname)\r\n        }\r\n    }\r\n}))\r\n\r\nexport default trackPageview;\r\n","import validator from \"validator\";\r\n\r\nexport const requiredFields = [\"driverName\", \"email\", \"phone\", \"rideshareServices\", \"cities\",]\r\nexport const additionalFields = [\"description\",]\r\nexport const notEditableFields = [\"email\", \"tabletIds\", \"referralCode\"]\r\nexport const fieldToDescription = {\r\n    \"driverName\": \"Your Full Name:\",\r\n    \"email\": \"Your Email Address:\",\r\n    \"password\": \"Your Password:\",\r\n    \"phone\": \"Your Phone Number:\",\r\n    \"rideshareServices\": \"Your Rideshare Services:\",\r\n    \"cities\": \"Cities You Drive In:\",\r\n    \"description\": \"A Message To Riders:\",\r\n    \"languages\": \"Languages:\"\r\n}\r\nexport const fieldToPrompt = {\r\n    \"driverName\": \"First Last\",\r\n    \"email\": \"johndoe@domain.com\",\r\n    \"password\": \"8 or more characters, 1 or more: capitals, lowercase, numbers, special characters\",\r\n    \"phone\": \"### ### ####\",\r\n    \"rideshareServices\": \"eg. Uber, Lyft (Comma Seperated)\",\r\n    \"cities\": \"eg. Toronto, Detroit (Comma Seperated)\",\r\n    \"description\": \"A nice message to your riders\",\r\n    \"languages\": \"eg. English, French (Comma Seperated)\"\r\n}\r\n\r\nexport const fieldToFeedback = {\r\n    \"driverName\": \"Name should include First and Last, eg. 'John Doe'\",\r\n    \"email\": \"The email you signed up with is not a valid email address\",\r\n    \"password\": \"Password has at least 1 capital, lowercase, number, and special character, and is at least 8 characters long\",\r\n    \"phone\": \"Phone number should be 10 digits eg. '(555) 123-4567'\",\r\n    \"rideshareServices\": \"Rideshare Services should be comma seperated list eg. 'Uber, Lyft'\",\r\n    \"cities\": \"Cities should be valid cities in comma seperated list eg. 'Toronto, Detroit'\",\r\n    \"description\": \"Message to riders should be valid ASCII text\",\r\n    \"languages\": \"Make sure languages are a comma seperated list\"\r\n}\r\n\r\nexport const isValidDriverObject = (driver) => {\r\n    return requiredFields.every((field) => { return driver[field] })\r\n}\r\n\r\nexport const fieldValueToString = (field, content) => {\r\n    if (typeof content === \"string\") {\r\n        return content\r\n    }\r\n    switch (field) {\r\n        case \"driverName\":\r\n            return Object.values(content).reverse().join(\" \")\r\n        case \"cities\":\r\n            return content.join(\", \")\r\n        case \"rideshareServices\":\r\n            return content.join(\", \")\r\n        case \"tabletIds\":\r\n            return content.join(\", \")\r\n        case \"languages\":\r\n            return content.join(\", \")\r\n        default:\r\n            return content\r\n    }\r\n}\r\n\r\nexport const fieldInputToValue = (field, input) => {\r\n    let string = \"\"\r\n    if (!input) {\r\n        return false\r\n    } else {\r\n        string = field === \"password\" ? input : validator.trim(input + \"\")\r\n    }\r\n    switch (field) {\r\n        case \"driverName\":\r\n            if (!string) return undefined\r\n            const driverName = string\r\n                .split(\" \")\r\n                .map((str) => { return validator.matches(validator.trim(str), /^[a-zA-Z-]+$/i) ? validator.trim(str) : undefined })\r\n                .filter(str => { return str })\r\n            return driverName.length > 1 ? { \"first\": driverName[0], \"last\": driverName.slice(1).join(\" \") } : undefined\r\n        case \"email\":\r\n            return validator.isEmail(string) ? validator.normalizeEmail(string) : undefined\r\n        case \"password\":\r\n            return validator.matches(string, /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-.]).{8,}$/) ? string : undefined\r\n        case \"phone\":\r\n            let cleaned = ('' + string).replace(/\\D/g, '')\r\n            let match = cleaned.match(/^(\\d|)?(\\d{3})(\\d{3})(\\d{4})$/)\r\n            if (match) {\r\n                var intlCode = (match[1] ? '+' + match[1] + \" \" : '')\r\n                return [intlCode, '(', match[2], ') ', match[3], '-', match[4]].join('')\r\n            } else {\r\n                return undefined\r\n            }\r\n        case \"cities\":\r\n            const cities = string\r\n                .split(\",\")\r\n                .map((str) => { return validator.matches(validator.trim(str), /^[a-zA-Z- ]+$/i) ? validator.trim(str) : undefined })\r\n                .filter(str => { return str })\r\n            return cities.length > 0 ? cities : undefined\r\n        case \"rideshareServices\":\r\n            const services = string\r\n                .split(\",\")\r\n                .map((str) => { return validator.matches(validator.trim(str), /^[\\w\\- ]+$/i) ? validator.trim(str) : undefined })\r\n                .filter(str => { return str })\r\n            return services.length > 0 ? services : undefined\r\n        case \"description\":\r\n            return validator.isAscii(string) ? validator.trim(string) : undefined\r\n        default:\r\n            return undefined\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Form, Row, Col } from 'react-bootstrap';\r\nimport { requiredFields, fieldToDescription, fieldToPrompt, fieldValueToString } from \"../../Utilities/Fields\";\r\n\r\nconst formProps = (props, field) => {\r\n    let type = \"text\"\r\n    let placeholder = props.isSignUp ? fieldToPrompt[field] : fieldValueToString(field, props.driver[field])\r\n\r\n    if (field === \"email\") {\r\n        type = \"username\";\r\n        placeholder = props.email\r\n    }\r\n\r\n    else if (field === \"password\") {\r\n        type = \"password\"\r\n    }\r\n\r\n    const propObject = {\r\n        className: \"formControl\",\r\n        readOnly: field === \"email\" ? true : props.readOnly,\r\n        plaintext: field === \"email\" ? true : props.plaintext,\r\n        onChange: (event) => props.handleInput(event, field),\r\n        type: type,\r\n        placeholder: placeholder\r\n    }\r\n\r\n    return propObject;\r\n}\r\n\r\nconst MainForm = (props) => {\r\n    const fields = [...requiredFields]\r\n    if (props.askForPassword) {\r\n        fields.splice(2, 0, \"password\")\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <h2 className=\"formHeader\">{props.isSignUp ? \"Required Fields:\" : \"About You:\"}</h2>\r\n            <div className=\"formWrapper\">\r\n                <Form className=\"formObject\">\r\n                    {fields.map((field, i) => {\r\n                        return (\r\n                            <Form.Group as={Row} className=\"formGroup\" key={i}>\r\n                                <Form.Label className=\"formLabel\" column sm=\"2\"> {fieldToDescription[field]} </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control {...formProps(props, field)} />\r\n                                </Col>\r\n                            </Form.Group>\r\n                        )\r\n                    })}\r\n                </Form>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default MainForm;\r\n","import React from 'react';\r\nimport { Form, Row, Col } from 'react-bootstrap';\r\nimport { additionalFields, fieldToDescription, fieldToPrompt } from \"../../Utilities/Fields\";\r\n\r\nconst AdditionalForm = (props) => {\r\n    if (additionalFields.length === 0) {\r\n        return null\r\n    }\r\n    const formProps = (field) => {\r\n        return {\r\n            className: \"formControl\",\r\n            readOnly: props.readOnly,\r\n            plaintext: props.plaintext,\r\n            onChange: (event) => { props.handleInput(event, field) },\r\n            placeholder: props.driver[field] ? props.driverUpdate[field] : \"(Optional) \" + fieldToPrompt[field]\r\n        }\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <h2 className=\"formHeader\">Addtional Information:</h2>\r\n            <div className=\"formWrapper\">\r\n                <Form className=\"formObject\">\r\n                    {additionalFields.map((field, i) => {\r\n                        return (\r\n                            <Form.Group as={Row} className=\"formGroup\" key={i}>\r\n                                <Form.Label className=\"formLabel\" column sm=\"2\"> {fieldToDescription[field]} </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control {...formProps(field)} />\r\n                                </Col>\r\n                            </Form.Group>\r\n                        )\r\n                    })}\r\n                </Form>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AdditionalForm;\r\n","import React from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\nconst redirectToOrigin = () => {\r\n  window.location.href = \"https://portlmedia.com/\";\r\n};\r\n\r\nconst Header = props => {\r\n  return (\r\n    <Navbar className=\"navbarHeader\" collapseOnSelect expand=\"lg\" bg=\"white\" variant=\"light\">\r\n      <img className=\"portlLogo\"\r\n      src=\"https://portl-client-microsites.s3.amazonaws.com/porttllogo.png\"\r\n      alt=\"portl logo\"\r\n      onClick={redirectToOrigin}\r\n      />\r\n      <Navbar.Text className=\"navbarText\">\r\n        <h1 className=\"headerText\">{props.title}</h1>\r\n      </Navbar.Text>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse className=\"navbarCollapse\" id=\"responsive-navbar-nav\">\r\n        <Nav>\r\n          <Nav.Link href=\"/profile#\">Profile</Nav.Link>\r\n          <Nav.Link href=\"/settings#\">Settings</Nav.Link>\r\n          <Nav.Link href=\"/leaderboard#\">Leader Board</Nav.Link>\r\n          <Nav.Link href=\"/about#\">About</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport ImageUploader from \"react-images-upload\"\r\nimport Loading from \"../../components/Loading\";\r\nimport withAnalytics from \"../../compositions/Analytics/withAnalytics\"\r\nimport MainForm from \"../../components/MainForm\";\r\nimport AdditionalForm from \"../../components/AdditionalForm\";\r\nimport Header from \"../../components/Header\";\r\nimport { requiredFields, additionalFields, fieldValueToString } from \"../../Utilities/Fields\";\r\n\r\nclass EditProfile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: props.email,\r\n            driver: props.driver,\r\n            redirectToOrigin: props.redirectToOrigin,\r\n            logoutDriver: props.logoutDriver,\r\n            isSignUp: props.isSignUp,\r\n            isLoading: true,\r\n            handleFormSubmission: props.handleFormSubmission,\r\n            picture: [],\r\n            setModal: props.setModal,\r\n            setNotification: props.setNotification,\r\n            isEditing: true,\r\n        }\r\n        this.ref = props.driver.referrer\r\n        this.changes = false\r\n        console.log(this.ref);\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.initDriverUpdate()\r\n    }\r\n\r\n    initDriverUpdate = () => {\r\n        const driverUpdate = {}\r\n        requiredFields.forEach((field) => {\r\n            driverUpdate[field] = this.state.isSignUp ? \"\" : fieldValueToString(field, this.state.driver[field])\r\n        })\r\n        additionalFields.forEach((field) => {\r\n            driverUpdate[field] = this.state.driver[field] ? fieldValueToString(field, this.state.driver[field]) : \"\"\r\n        })\r\n        console.log(\"inited driver:\", driverUpdate)\r\n        this.setState({ driverUpdate: driverUpdate, isLoading: false })\r\n    }\r\n\r\n    editingButtons = () => {\r\n        return (\r\n            <div className=\"editingButtons\">\r\n                <Button className=\"submissionButton\" onClick={this.handleSubmit}> Save Your Changes </Button>\r\n                <Button className=\"submissionButton\" onClick={() => this.stopEditing(this.changes)} > Cancel </Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    notEditingButton = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button className=\"submissionButton\" onClick={this.startEditing} > Edit Your Profile </Button>\r\n                <Button className=\"submissionButton\" onClick={this.handleDone} > I'm Done Signing Up </Button>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    handleSubmit = async () => {\r\n        const valid = await this.state.handleFormSubmission(this.state.driverUpdate, this.state.picture, this.ref)\r\n        if (valid) {\r\n            this.stopEditing()\r\n            this.setState({ isSignUp: false })\r\n        }\r\n    }\r\n\r\n    handleDone = () => {\r\n        const title = \"Thanks for Signing Up\";\r\n        const msg = \"We will contact you soon, for now we will send you back to our website\";\r\n        const prompt = \"Got It, Send Me Back\"\r\n        this.state.setModal(true, title, msg, prompt, this.state.redirectToOrigin)\r\n    }\r\n\r\n    handleInput = (event, field) => {\r\n        const input = event.target.value\r\n        const driver = { ...this.state.driverUpdate }\r\n        driver[field] = input\r\n        this.changes = true\r\n        this.setState({ driverUpdate: driver })\r\n    }\r\n\r\n    onDrop = (picture) => {\r\n        try {\r\n            const picLength = picture.length - 1\r\n            picture[picLength].url = URL.createObjectURL(picture[picLength])\r\n            console.log(\"picture:\", picture)\r\n            this.setState({\r\n                picture: [picture[picLength] ? picture[picLength] : undefined],\r\n            })    \r\n        } catch (err) {\r\n            console.log(\"Error occurred in handling picture:\", err)\r\n            this.props.setNotification(true, \"Error\", \"An error occurred in handling your image\", true)\r\n        }\r\n    }\r\n\r\n    startEditing = () => {\r\n        this.setState({ isEditing: true })\r\n    }\r\n\r\n    stopEditing = (reset = false) => {\r\n        if (reset) {\r\n            this.changes = false\r\n            document.location.reload()\r\n            this.stopEditing()\r\n        } else {\r\n            this.changes = false\r\n            const driver = { ...this.state.driverUpdate }\r\n            if (this.state.picture.length > 0) {\r\n                driver.profile = this.state.picture[this.state.picture.length - 1].url + '#' + new Date().getTime()\r\n            }\r\n            this.setState({\r\n                driverUpdate: reset ? this.state.driver : driver,\r\n                isEditing: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        const additionalFormProps = {\r\n            readOnly: !this.state.isEditing,\r\n            email: this.state.email,\r\n            driver: this.state.driver,\r\n            driverUpdate: this.state.driverUpdate,\r\n            handleInput: this.handleInput,\r\n        }\r\n\r\n        const mainFormProps = {\r\n            readOnly: !this.state.isEditing,\r\n            email: this.state.email,\r\n            driver: { ...this.state.driverUpdate },\r\n            handleInput: this.handleInput,\r\n            isSignUp: this.state.isSignUp,\r\n        }\r\n\r\n        const ImageUploaderProps = {\r\n            withIcon: false,\r\n            singleImage: true,\r\n            buttonText: \"Choose a new profile picture\",\r\n            onChange: this.onDrop,\r\n            imgExtension: ['.jpg', '.gif', '.png', '.gif', '.jpeg', '.bmp'],\r\n            label: \"Max file size: 5mb, Accepts .jpg, .png, .gif\",\r\n            maxFileSize: 5000000,\r\n            className: \"imgUploader\"\r\n        }\r\n\r\n        const picLength = this.state.picture.length - 1\r\n        const uploadStyles = window.innerWidth > 325 ? { width: 300 } : { width: '75vw' }\r\n\r\n        if (this.state.isLoading) return <Loading />\r\n        return (\r\n            <React.Fragment>\r\n                <Header title={this.state.isSignUp ? \"Sign Up\" : \"Your Profile\"} redirectToOrigin={this.state.redirectToOrigin} />\r\n                <div className=\"profileBackground\">\r\n                    <img\r\n                        id=\"target\"\r\n                        src={picLength >= 0 && this.state.picture[picLength] ? this.state.picture[picLength].url : this.state.driver.profile + '#' + new Date().getTime()}\r\n                        alt={\"Your profile\"}\r\n                        className=\"profilePic\"\r\n                    />\r\n                    {this.state.isEditing && <ImageUploader {...ImageUploaderProps} style={uploadStyles} />}\r\n                </div>\r\n                {!this.state.isEditing && this.notEditingButton()}\r\n                {this.state.isEditing && picLength >= 0 && this.editingButtons()}\r\n                <MainForm {...mainFormProps} />\r\n                <AdditionalForm {...additionalFormProps} />\r\n                {this.state.isEditing && this.editingButtons()}\r\n                {!this.state.isEditing && <Button className=\"submissionButton\" onClick={this.state.logoutDriver}> Logout </Button>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withAnalytics(EditProfile)","import React from 'react';\r\nimport withAnalytics from '../../compositions/Analytics/withAnalytics';\r\nimport { Button } from 'react-bootstrap';\r\nimport { serverUrl } from \"../../config\";\r\n\r\nconst errorRedirect = (url) => {\r\n    window.location.href = url;\r\n}\r\n\r\nconst ErrorTemplate = (props) => {\r\n    return (\r\n        <div className=\"infoBoxWrapper\">\r\n            <div className=\"infoWrapper\">\r\n                <h1 className=\"titleText\" > {props.title} </h1>\r\n                <h2 className=\"infoSubText\" >\r\n                    {typeof props.error === \"string\" ? props.error : Object.entries(props.error).join(\", \")}\r\n                </h2>\r\n                <Button\r\n                    onClick={() => errorRedirect(serverUrl + \"/auth0login/wordpress\")}\r\n                    className=\"submissionButton\"\r\n                    type=\"submit\"\r\n                >\r\n                    Sign in\r\n                </Button>\r\n                <Button\r\n                    onClick={() => errorRedirect('https://portlmedia.com/contact-us')}\r\n                    className=\"submissionButton\"\r\n                    type=\"submit\"\r\n                >\r\n                    Back to portlmedia.com\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Error = (props) => {\r\n    console.log(props.err);\r\n    return (\r\n        <ErrorTemplate error={props.err} title=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default withAnalytics(Error);","import { serverUrl } from \"../../config\";\r\nimport { requiredFields, additionalFields } from \"../Fields\";\r\n\r\nconst getDriverEndpoint = \"/driver/info/\";\r\nconst updateDriverEndpoint = \"/driver/update/\";\r\n\r\nconst requestDefaults = (type) => {\r\n    const query = {\r\n        credentials: 'include',\r\n        method: type,\r\n    }\r\n\r\n    if (type === \"GET\") {\r\n        query.headers = {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        }\r\n    }\r\n    // if (serverUrl.includes(\"localhost:\")) {\r\n    //     query.headers.Authorization = \"Bearer \" + token\r\n    // }\r\n\r\n    return query\r\n}\r\n\r\nconst getDriver = (receiveDriver, handleError) => {\r\n    console.log(\"Getting Driver\")\r\n    const queryForDriver = {...requestDefaults(\"GET\")}\r\n\r\n    const endpoint = serverUrl + getDriverEndpoint\r\n    const request = new Request(endpoint, queryForDriver)\r\n    console.log(endpoint)\r\n    fetch(request)\r\n        .then(receiveDriver)\r\n        .catch(handleError);\r\n}\r\n\r\nconst createFormData = (driver, ref) => {\r\n    const data = new FormData();\r\n    if (ref) data.append('ref', ref)\r\n    requiredFields.concat(additionalFields).forEach(field => {\r\n        if (!driver[field]) {\r\n            return;\r\n        } else if (Array.isArray(driver[field])) {\r\n            for (let i = 0; i < driver[field].length; i++) {\r\n                data.append(field + \"[\" + i + \"]\", driver[field][i]);\r\n            }\r\n        } else if (typeof driver[field] === \"object\") {\r\n            // wrap in a try catch?\r\n            data.set(field, JSON.stringify(driver[field]));\r\n        } else if (typeof driver[field] === \"string\") {\r\n            data.set(field, driver[field]);\r\n        } else {\r\n            return;\r\n        }\r\n    })\r\n    return data;\r\n}\r\n\r\nconst createDriver = async (driverUpdate, handleCreateResponse, ref, handleError) => {\r\n    console.log(\"Creating driver with ref:\", ref)\r\n    const driver = { ...driverUpdate }\r\n    const data = createFormData(driver, ref)\r\n\r\n    const newDriverInfo = {\r\n        ...requestDefaults(\"POST\"),\r\n        body: data\r\n    }\r\n\r\n    const endpoint = serverUrl + updateDriverEndpoint;\r\n    const request = new Request(endpoint, newDriverInfo)\r\n    console.log(\"creating driver\", endpoint, newDriverInfo)\r\n    fetch(request)\r\n        .then(handleCreateResponse)\r\n        .catch(handleError);\r\n}\r\n\r\nconst updateDriver = (driverUpdate, profile, handleUpdateResponse, handleError) => {\r\n    const driver = { ...driverUpdate }\r\n    const data = createFormData(driver)\r\n    if (profile) {\r\n        data.set('profile', profile)\r\n        data.set('fileType', profile.type)\r\n    }\r\n\r\n    // Update driver info\r\n    const updatedDriverInfo = {\r\n        ...requestDefaults(\"POST\"),\r\n        body: data\r\n    }\r\n    const endpoint = serverUrl + updateDriverEndpoint\r\n    const request = new Request(endpoint, updatedDriverInfo)\r\n    console.log(\"updating driver\", endpoint, updatedDriverInfo)\r\n    fetch(request)\r\n        .then(handleUpdateResponse)\r\n        .catch(handleError);\r\n}\r\n\r\nexport {\r\n    getDriver,\r\n    createDriver,\r\n    updateDriver\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Loading from \"../../components/Loading\";\r\nimport { deleteCookie } from \"../../Utilities/Cookie\";\r\nimport EditProfile from \"../EditProfile\";\r\nimport Error from \"../../components/Error\";\r\nimport { getDriver, createDriver, updateDriver } from \"../../Utilities/Api/api\";\r\nimport {\r\n  fieldToFeedback,\r\n  fieldInputToValue,\r\n  isValidDriverObject,\r\n  requiredFields,\r\n  additionalFields\r\n} from \"../../Utilities/Fields\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isSignUp: false,\r\n      email: undefined,\r\n      driverUpdate: undefined,\r\n      driver: undefined,\r\n      isLoading: true,\r\n      error: undefined,\r\n      isEditing: false,\r\n      picture: [],\r\n      modal: {},\r\n      notification: {}\r\n    };\r\n    getDriver(this.receiveDriver, this.handleError);\r\n  }\r\n\r\n  logoutDriver = async () => {\r\n    deleteCookie(\"token\", \"portlmedia.com\");\r\n    window.location.href =\r\n      \"https://dev-2nvx8dom.auth0.com/v2/logout?returnTo=https%3A%2F%2Fportlmedia.com\";\r\n  };\r\n\r\n  redirectToOrigin = () => {\r\n    window.location.href = \"https://portlmedia.com/\";\r\n  };\r\n\r\n  setModal = (open, title, msg, prompt, onClick) => {\r\n    const modal = open ? { ...this.state.modal } : {};\r\n    modal.isOpen = open;\r\n    if (title) modal.title = title;\r\n    if (msg) {\r\n      if (Array.isArray(msg)) modal.text = msg;\r\n      else modal.text = [msg];\r\n    }\r\n    if (prompt && onClick) modal.buttonPrompt = prompt;\r\n    if (onClick) modal.onClick = onClick;\r\n    this.setState({ modal: modal });\r\n  };\r\n\r\n  createModal = () => {\r\n    return (\r\n      <Modal\r\n        isOpen={this.state.modal.isOpen}\r\n        onRequestClose={() => this.setModal(false)}\r\n        shouldFocusAfterRender={true}\r\n        className=\"alertModal\"\r\n        overlayClassName=\"alertModalOverlay\"\r\n      >\r\n        <button\r\n          onClick={() => this.setModal(false)}\r\n          className=\"modalCloseButton\"\r\n        >\r\n          &times;\r\n        </button>\r\n        <h1 className=\"alertModalTitle\">{this.state.modal.title}</h1>\r\n        {this.state.modal.text &&\r\n          this.state.modal.text.map((msg, i) => {\r\n            return (\r\n              <p key={i} className=\"alertModalText\">\r\n                {msg}\r\n              </p>\r\n            );\r\n          })}\r\n        {this.state.modal.buttonPrompt && (\r\n          <Button\r\n            onClick={this.state.modal.onClick}\r\n            className=\"optionalModalButton\"\r\n          >\r\n            {this.state.modal.buttonPrompt}\r\n          </Button>\r\n        )}\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  setNotification = (open, title, msg, error, timeout = 5) => {\r\n    console.log(\"opening notification\");\r\n    this.setState({ notification: { isOpen: false } }, () => {\r\n      const notification = open ? { ...this.state.notification } : {};\r\n      notification.isOpen = open;\r\n      if (title) notification.title = title;\r\n      if (msg) notification.text = msg;\r\n      if (error) notification.isError = true;\r\n      this.setState({ notification: notification });\r\n      // causing too many timeouts, need to handle more carefully\r\n      // if (timeout) {\r\n      //     setTimeout(() => { this.setState({ notification: { isOpen: false } }) }, timeout * 1000)\r\n      // }\r\n    });\r\n  };\r\n\r\n  createNotification = () => {\r\n    let modalClass = \"notificationModal green\";\r\n    let titleClass = \"notificationModalTitle green\";\r\n    let textClass = \"notificationModalText green\";\r\n    let msg = String(this.state.notification.text);\r\n    if (msg && typeof msg === \"object\") {\r\n      msg = Object.entries(msg);\r\n    }\r\n    if (this.state.notification.isError) {\r\n      modalClass = \"notificationModal red\";\r\n      titleClass = \"notificationModalTitle red\";\r\n      textClass = \"notificationModalText red\";\r\n      console.log(\"error notif:\", this.state.notification);\r\n      if (!msg) {\r\n        msg =\r\n          \"Something went wrong, try again in a few minutes or contact us for further support\";\r\n      }\r\n    } else {\r\n      console.log(\"sucess notif:\", this.state.notification);\r\n    }\r\n    return (\r\n      <Modal\r\n        isOpen={this.state.notification.isOpen}\r\n        onRequestClose={() => this.setNotification(false)}\r\n        shouldCloseOnOverlayClick={false}\r\n        shouldFocusAfterRender={false}\r\n        className={modalClass}\r\n        overlayClassName=\"notificationModalOverlay\"\r\n        onClick={() => this.setNotification(false)}\r\n      >\r\n        <button\r\n          onClick={() => this.setNotification(false)}\r\n          className=\"notificationCloseButton\"\r\n        >\r\n          &times;\r\n        </button>\r\n        <h1 className={titleClass}>{this.state.notification.title}</h1>\r\n        <p className={textClass}>{msg}</p>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  notifyError = error => {\r\n    let msg = error;\r\n    if (!msg) msg = \"Something went wrong, try again in a few minutes\";\r\n    this.setNotification(true, \"An Error Occurred\", msg, true);\r\n    this.setState({\r\n      isLoading: false\r\n    });\r\n  };\r\n\r\n  handleError = error => {\r\n    console.log(\"Error:\", error);\r\n    this.setState({\r\n      error: error,\r\n      isLoading: false\r\n    });\r\n  };\r\n\r\n  receiveDriver = async response => {\r\n    console.log(\"received driver\");\r\n    const driver = await response.json();\r\n    driver.profile = driver.profile + \"#\" + new Date().getTime();\r\n    console.log(driver);\r\n    localStorage.setItem(\"email\", driver.email);\r\n    if (response.status === 200) {\r\n      this.setState({\r\n        email: driver.email,\r\n        isSignUp: !isValidDriverObject(driver),\r\n        driver: driver,\r\n        isLoading: false\r\n      });\r\n    } else {\r\n      console.log(\"This email is not associated with this access token\");\r\n      this.handleError(\r\n        \"You are not signed in. Please sign in to visit this page.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  handleImageUploadError = (error, msg) => {\r\n    console.log(\"There was an error uploading image:\", error);\r\n    const title = \"There was an error uploading your image\";\r\n    this.setNotification(true, title, msg, true);\r\n    return false;\r\n  };\r\n\r\n  handleFormSubmission = async (driverUpdate, picture, ref) => {\r\n    const driver = { ...driverUpdate };\r\n    driver.email = this.state.email;\r\n    console.log(\"driver on form submission:\", driver);\r\n    const invalidFields = [];\r\n    if (this.state.isSignUp && !isValidDriverObject(driver)) {\r\n      console.log(\"missing field(s):\", driver);\r\n      this.alertInvalidInput(\"Please fill out all required fields to sign up\");\r\n      return false;\r\n    } else {\r\n      console.log(\"all require fields filled\");\r\n      requiredFields.concat(additionalFields).forEach(field => {\r\n        if (field === \"email\" || typeof driver[field] !== \"string\") {\r\n          return;\r\n        }\r\n        const sanitizedInput = this.validateEdit(driver[field], field);\r\n        if (!sanitizedInput.isValid) {\r\n          invalidFields.push(field);\r\n        } else {\r\n          console.log(\"valid value:\", sanitizedInput);\r\n          driver[field] = sanitizedInput.isValid;\r\n        }\r\n      });\r\n    }\r\n\r\n    const invalidRequiredFields = invalidFields\r\n      .map(field => {\r\n        let f;\r\n        if (requiredFields.includes(field)) {\r\n          f = field;\r\n        } else if (!driver[field]) {\r\n          f = undefined;\r\n        } else {\r\n          f = field;\r\n        }\r\n\r\n        if (this.state.driver[field]) driver[field] = this.state.driver[field];\r\n        return f;\r\n      })\r\n      .filter(f => f);\r\n\r\n    if (invalidRequiredFields.length === 0) {\r\n      this.setState({ driver: driver }, () => {\r\n        this.refreshDriverInfo(driver, picture, ref);\r\n      });\r\n      return true;\r\n    } else {\r\n      const msg = invalidRequiredFields.map(f => {\r\n        return \" - \" + fieldToFeedback[f];\r\n      });\r\n      this.setModal(true, \"Invalid Edits:\", msg);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  refreshDriverInfo = async (driver, picture, ref) => {\r\n    console.log(\"pics:\", picture.length);\r\n    if (this.state.isSignUp) {\r\n      driver.profile = driver.profile + \"#\" + Date.now();\r\n      await createDriver(driver, this.handleCreateResponse, ref, console.log);\r\n      this.setState({ isSignUp: false });\r\n    } else {\r\n      const profile = picture[picture.length - 1];\r\n      updateDriver(\r\n        driver,\r\n        profile,\r\n        this.handleUpdateResponse,\r\n        this.notifyError\r\n      );\r\n    }\r\n  };\r\n\r\n  alertInvalidInput = reason => {\r\n    const title = \"Invalid form submission:\";\r\n    this.setState({ isLoading: false }, () => {\r\n      this.setNotification(true, title, reason, true);\r\n    });\r\n  };\r\n\r\n  validateEdit = (string, field) => {\r\n    let sanitizedInput = {\r\n      isValid: false,\r\n      field: field\r\n    };\r\n    sanitizedInput.isValid = fieldInputToValue(field, string);\r\n    return sanitizedInput;\r\n  };\r\n\r\n  handleCreateResponse = async res => {\r\n    const response = await res.json();\r\n    console.log(\"server response:\", response);\r\n    if (res.status === 200) {\r\n      this.setNotification(\r\n        true,\r\n        \"Success!\",\r\n        \"Your Account Was Created!\",\r\n        false\r\n      );\r\n    } else {\r\n      this.setState({ error: response.msg, isLoading: false });\r\n    }\r\n  };\r\n\r\n  handleUpdateResponse = async res => {\r\n    const response = await res.json();\r\n    console.log(\"update response:\", res);\r\n    if (res.status === 200) {\r\n      this.setNotification(\r\n        true,\r\n        \"Success\",\r\n        \"Your changes have been saved!\",\r\n        false\r\n      );\r\n    } else if (res.status === 400) {\r\n      this.setNotification(\r\n        true,\r\n        \"Error\",\r\n        \"There was an error with authenticating your account\",\r\n        true\r\n      );\r\n      this.setState({ isLoading: false });\r\n    } else if (res.status === 403) {\r\n      this.setState({\r\n        error: \"This access token doesn't allow modification to this user\",\r\n        isLoading: false\r\n      });\r\n    } else {\r\n      this.setState({\r\n        error: \"Error: \" + JSON.stringify(response),\r\n        isLoading: false\r\n      });\r\n    }\r\n  };\r\n\r\n  render = () => {\r\n    const editProps = {\r\n      email: this.state.email,\r\n      driver: this.state.driver,\r\n      handleFormSubmission: this.handleFormSubmission,\r\n      setModal: this.setModal,\r\n      setNotification: this.setNotification,\r\n      isSignUp: this.state.isSignUp,\r\n      askForPassword: false,\r\n      askForEmail: false,\r\n      redirectToOrigin: this.redirectToOrigin,\r\n      logoutDriver: this.logoutDriver\r\n    };\r\n\r\n    console.log(this.state.isSignUp);\r\n\r\n    if (this.state.error) {\r\n      return <Error err={this.state.error} />;\r\n    } else if (this.state.isLoading) {\r\n      return <Loading />;\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <EditProfile {...editProps} />\r\n          {this.createModal()}\r\n          {this.createNotification()}\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from 'react';\r\nimport Header from '../../components/Header';\r\n\r\nclass AboutPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ready: false,\r\n            title: \"About\"\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div>\r\n                <Header title={this.state.title} />\r\n                <h2>This page is not ready yet</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AboutPage","import React, { Component } from \"react\";\r\nimport Loading from \"../../components/Loading\";\r\nimport Header from \"../../components/Header\";\r\n\r\nclass LeaderBoardPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"Leader Board\",\r\n      apiUrl: \"https://mixpanel.com/api/2.0/events/properties?\",\r\n      param: \"type=general&name=driver&event=Touch Me&\",\r\n      isLoading: true,\r\n      currentDriver: localStorage.getItem(\"email\"),\r\n      drivers: [],\r\n      value: \"\"\r\n    };\r\n    //get all drivers and their count\r\n    this.getAllDrivers(this.state.value);\r\n  }\r\n\r\n  //to fetch drivers data\r\n  getAllDrivers(...props) {\r\n    const apiUrl = this.state.apiUrl;\r\n    const param = this.state.param;\r\n    let dateParams = \"\";\r\n    if (props[0].length > 0) {\r\n      if (props[0] === \"lifetimeCount\") {\r\n        dateParams = \"unit=year&interval=10\";\r\n      } else {\r\n        dateParams = \"unit=day&interval=6&from_date=\" + props[0];\r\n      }\r\n    } else {\r\n      dateParams = \"unit=week\";\r\n    }\r\n\r\n    fetch(apiUrl + param + dateParams, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Basic \" + process.env.REACT_APP_MIXPANEL_BASIC_AUTH_KEY\r\n      }\r\n    })\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(res => {\r\n        let values = res.data.values;\r\n        let drivers = [];\r\n        let totalCount = 0;\r\n        Object.keys(values).forEach(key => {\r\n          Object.keys(values[key]).forEach(date => {\r\n            totalCount += values[key][date];\r\n          });\r\n          drivers.push({ email: key, count: totalCount });\r\n          totalCount = 0;\r\n        });\r\n        drivers.sort(this.sortByProperty(\"count\"));\r\n        this.setState({ drivers: drivers });\r\n        this.setState({ isLoading: false });\r\n      });\r\n  }\r\n\r\n  //sorting of data fetched by property \"count\" in descending order\r\n  sortByProperty(count) {\r\n    return function(x, y) {\r\n      return y[count] - x[count];\r\n    };\r\n  }\r\n\r\n  //to mask email address\r\n  emailMasking(email) {\r\n    if (email.indexOf(\"@\") > 0) {\r\n      return (\r\n        email.substring(0, 1) + \"***\" + email.substring(email.indexOf(\"@\") - 1)\r\n      );\r\n    }\r\n    else return email;\r\n  }\r\n\r\n  //to handle change on selecting option from dropdown menu\r\n  handleChange(e) {\r\n    let dateValue = e.target.value;\r\n    this.setState({ value: dateValue });\r\n    this.setState({ isLoading: true });\r\n    this.getAllDrivers(dateValue);\r\n  }\r\n\r\n  //to find date on last Monday\r\n  findLastMonday() {\r\n    let prevMonday = new Date();\r\n    prevMonday.setDate(prevMonday.getDate() - ((prevMonday.getDay() + 6) % 7));\r\n    return prevMonday;\r\n  }\r\n\r\n  //to formate date(yyyy-mm-dd)\r\n  formatDate(date) {\r\n    let d = date,\r\n        month = \"\" + (d.getMonth() + 1),\r\n        day = \"\" + d.getDate(),\r\n        year = d.getFullYear();\r\n    if (month.length < 2) month = '0' + month;\r\n    if (day.length < 2) day = '0' + day;\r\n    return [year, month, day].join('-');\r\n}\r\n\r\n  //to create options for dropdown menu\r\n  createOptions() {\r\n    let prevMonday = this.findLastMonday();\r\n    let formattedDate = prevMonday.toISOString().slice(0, 10);\r\n    let options = [<option value={formattedDate} key={1}>Current week</option>];\r\n\r\n    //to create options for last 10 weeks\r\n    for (let i = 0; i < 10; i++) {\r\n      prevMonday.setDate(prevMonday.getDate() - 7);\r\n      formattedDate = this.formatDate(prevMonday);\r\n      options.push(<option value={formattedDate} key={i + 2}>{formattedDate}</option>);\r\n    }\r\n\r\n    //this option will display lifetime count\r\n    options.push(<option value=\"lifetimeCount\" key={12}>Lifetime count</option>);\r\n    return options;\r\n  }\r\n\r\n  //to count days left for weekly competition\r\n  daysLeft() {\r\n    let today = new Date();\r\n    let days = 7 - ((today.getDay() + 6) % 7);\r\n    return days;\r\n  }\r\n\r\n  //to create table row\r\n  createRow(key, email, count, isTbaleHeader) {\r\n    return (\r\n      <div className=\"tableRow\"\r\n        style={{\r\n        backgroundColor:\r\n          this.state.currentDriver === email\r\n            ? \"rgba(180, 197, 249)\"\r\n              : \"\",\r\n          fontWeight: isTbaleHeader ? \"bold\" : \"\"\r\n      }}>\r\n        <div className=\"rowContent columnOne\">{key}</div>\r\n        <hr />\r\n        <div className=\"rowContent columnTwo\">\r\n          {this.emailMasking(email)}\r\n        </div>\r\n        <hr />\r\n        <div className=\"rowContent columnThree\">\r\n          {count}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render = () => {\r\n    if (this.state.isLoading) {\r\n      return <Loading />;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Header title={this.state.title} />\r\n          <div className=\"lb-form-content\">\r\n            Select week:\r\n            <select value={this.state.value} onChange={e => this.handleChange(e)}>\r\n              {this.createOptions()}\r\n            </select>\r\n            <p>{this.daysLeft()} day(s) left for this week competition</p>\r\n          </div>\r\n          <div className=\"tableContainer\">\r\n            {this.createRow(\"#\", \"Email Addresses\", \"# of Events\", true)}\r\n            {this.state.drivers.map((driver, index) => {\r\n              return this.createRow(index+1, driver.email, driver.count);\r\n            })}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\nexport default LeaderBoardPage;","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport Profile from './views/ViewProfile';\r\nimport ErrorPage from './components/Error';\r\nimport About from \"./views/About\";\r\nimport LeaderBoard from \"./views/LeaderBoard\"\r\nimport { serverUrl } from './config';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n    const params = queryString.parse(window.location.search) \r\n    console.log(params)\r\n    // if (params.ref) console.log(params.ref)\r\n    if (params.ref) {\r\n        console.log(\"ref:\", params.ref)\r\n        window.location.href = serverUrl + `/auth0login/driverprofile/?ref=${params.ref}`\r\n    }\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path='/profile' component={Profile}/>\r\n                <Route exact path='/error' component={ErrorPage}/>\r\n                <Route exact path='/about' component={About} />\r\n                <Route exact path='/leaderboard' component={LeaderBoard} />\r\n                <Route component={() => {return <Redirect exact to={'/profile' + window.location.search}/>}} />\r\n            </Switch>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport FullStory from 'react-fullstory';\r\nimport ReactGA from 'react-ga';\r\n\r\nconst production = process.env.REACT_APP_ENV === \"production\";\r\n\r\nconsole.log('process.env.REACT_APP_ENV: ', process.env.REACT_APP_ENV);\r\nif (production) {\r\n    ReactGA.initialize('UA-129510306-1', {\r\n        debug: false,\r\n        siteSpeedSampleRate: 100\r\n    })\r\n\r\n    ReactDOM.render(\r\n        <BrowserRouter>\r\n            <FullStory org=\"GKC8F\" />\r\n            <App />\r\n        </BrowserRouter>, document.getElementById('root')\r\n    );\r\n} else {\r\n    ReactDOM.render(\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>, document.getElementById('root')\r\n    );\r\n}\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}